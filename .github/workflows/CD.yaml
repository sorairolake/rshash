name: CD

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-20.04
            use-cross: true
          - target: x86_64-apple-darwin
            os: macos-10.15
          - target: x86_64-pc-windows-msvc
            os: windows-2019
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: 1.56.0 # MSRV
        target: ${{ matrix.target }}
        override: true
        profile: minimal
    - name: Build a package
      uses: actions-rs/cargo@v1.0.1
      with:
        command: build
        args: --release --target ${{ matrix.target }}
        use-cross: ${{ matrix.use-cross }}
    - name: Strip release binary
      if: matrix.os != 'windows-2019'
      run: strip "target/${{ matrix.target }}/release/rshash"
    - name: Get version
      id: get_version
      uses: battila7/get-version-action@v2.2.1
    - name: Setup Ruby
      if: matrix.os != 'windows-2019'
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
    - name: Install Asciidoctor
      if: matrix.os != 'windows-2019'
      run: |
        gem update --system
        gem install asciidoctor
        asciidoctor -V
    - name: Build man pages
      if: matrix.os != 'windows-2019'
      run: |
        mkdir -p doc/man/dest
        asciidoctor -a "revnumber=${{ steps.get_version.outputs.version-without-v }}" -b manpage -D doc/man/dest doc/man/man*/*.adoc
    - name: Create a package
      shell: bash
      run: |
        if [ "${{ matrix.os }}" != "windows-2019" ] ; then
          bin="target/${{ matrix.target }}/release/rshash"
        else
          bin="target/${{ matrix.target }}/release/rshash.exe"
        fi
        package="rshash-${{ steps.get_version.outputs.version }}-${{ matrix.target }}"

        mkdir -p "${package}"/doc
        cp README.adoc COPYING "${bin}" "${package}"
        cp {AUTHORS,BUILD,CHANGELOG,CONTRIBUTING}.adoc "${package}"/doc
        if [ "${{ matrix.os }}" != "windows-2019" ] ; then
          mkdir -p "${package}"/man
          cp doc/man/dest/* "${package}"/man
        fi

        if [ "${{ matrix.os }}" != "windows-2019" ] ; then
          find "${package}" -mindepth 1 -maxdepth 1 -exec basename -a {} + | tar cJvf "${package}.tar.xz" --format=pax -C "${package}" -T -
        else
          7z a -bb "${package}.7z" ./"${package}"/*
        fi
    - name: Release
      uses: softprops/action-gh-release@v0.1.13
      with:
        draft: true
        files: 'rshash-*'
        name: "Release version ${{ steps.get_version.outputs.version-without-v }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
