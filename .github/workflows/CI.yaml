name: CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
          - target: x86_64-unknown-linux-musl
            os: ubuntu-20.04
            use-cross: true
          - target: x86_64-apple-darwin
            os: macos-10.15
          - target: x86_64-pc-windows-msvc
            os: windows-2019
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: 1.56.0 # MSRV
        target: ${{ matrix.target }}
        override: true
        profile: minimal
    - name: Build a package
      uses: actions-rs/cargo@v1.0.1
      with:
        command: build
        args: --target ${{ matrix.target }}
        use-cross: ${{ matrix.use-cross }}
    - name: Run tests
      uses: actions-rs/cargo@v1.0.1
      with:
        command: test
        args: --target ${{ matrix.target }}
        use-cross: ${{ matrix.use-cross }}

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt
    - name: Check code formatted
      uses: actions-rs/cargo@v1.0.1
      with:
        command: fmt
        args: -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: clippy
    - name: Check no lint warnings
      uses: actions-rs/cargo@v1.0.1
      with:
        command: clippy
        args: -- -D warnings

  doc:
    name: Document
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
    - name: Install Asciidoctor
      run: |
        gem update --system
        gem install asciidoctor
        asciidoctor -V
    - name: Build man pages
      run: asciidoctor -b manpage doc/man/man*/*.adoc
    - name: Clean the working tree
      run: git clean -f
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
        override: true
        profile: minimal
    - name: Setup the just command runner
      uses: extractions/setup-just@v1
    - name: Check if README is up-to-date
      run: |
        just update-readme
        git diff --exit-code README.adoc
    - name: AsciiDoc to DocBook
      run: asciidoctor -b docbook5 README.adoc
    - name: DocBook to GFM
      uses: docker://pandoc/core:2.14
      with:
        args: -f docbook -t gfm -o doc/crates.io/README.md README.xml
    - name: Check if README for crates.io is up-to-date
      run: git diff --exit-code doc/crates.io/README.md
